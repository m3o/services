name: Build

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Detect files changed
      id: file_changes
      uses: trilom/file-changes-action@v1
      with:
        githubToken: ${{ secrets.GH_TOKEN }}
    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Setup go-mod cache
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-gomods-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-gomods-
    - name: Setup build cache
      id: setup-build-cache
      uses: actions/cache@v1
      with:
        path: /home/runner/work/services/services/builds
        key: ${{ runner.os }}-build-${{ hashFiles('**/*.go') }}
        restore-keys: |
          ${{ runner.os }}-build-
    - name: List builds
      run: |
        echo $(pwd)
        ls -ll .
        ls -ll builds
#     - name: Initialise build cache
#       if: steps.setup-build-cache.outputs.cache-hit != 'true'
#       run: |
#         mkdir builds
#         for dir in */; do
#           cd $dir
#             echo Building $dir
#             (CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build . && mv ./${dir::-1} ../builds/${dir::-1} || true)
#           cd ..;
#         done
    - name: Build services with changes
      run: |
        cat $HOME/files.json
        echo 
        
        for dir in */; do
          if grep $dir $HOME/files.json; then
            cd $dir
            echo Building $dir
            (CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build . && mv ./${dir::-1} ../builds/${dir::-1} || true)
            cd ..
          else
            echo Skipping $dir
          fi
        done

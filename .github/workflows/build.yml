name: Build

on:
  push:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Download builds
      uses: actions/download-artifact@v1
      with:
        name: builds
    - name: Install Go
      if: failure()
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
    - name: Check out repository
      if: failure()
      uses: actions/checkout@v2
    - name: Setup go-mod cache
      if: failure()
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-gomods-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-gomods-
    - name: Setup builds
      if: failure()
      run: |
        mkdir builds
        for dir in */; do
          cd $dir
          echo Building $dir
          (CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build . && mv ./${dir::-1} ../builds/${dir::-1} || true)
          cd ..
        done
    - name: List builds
      if: always()
      run: |
        ls -ll builds
    - name: Upload builds
      uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: builds
        path: builds
  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Detect files changed
      id: file_changes
      uses: trilom/file-changes-action@v1
      with:
        githubToken: ${{ secrets.GH_TOKEN }}
    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Setup go-mod cache
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-gomods-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-gomods-
    - name: Download builds
      uses: actions/download-artifact@v1
      with:
        name: builds
    - name: Build services with changes
      run: |
        cat $HOME/files.json
        echo .
        
        for dir in */; do
          if grep $dir $HOME/files.json; then
            cd $dir
            echo Building $dir
            (CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build . && mv ./${dir::-1} ../builds/${dir::-1} || true)
            cd ..
           else
            #echo Skipping $dir
           fi
        done
    - name: Upload builds
      uses: actions/upload-artifact@v1
      with:
        name: builds
        path: builds


name: M3O integration tests
# NOTE: if this is running on a self hosted runner do not change to pull_request otherwise
# you have a big security risk https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners#self-hosted-runner-security-with-public-repositories
on: [push]

jobs:

  test:
    name: Micro server m3o integration tests
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v2
      with:
        go-version: 1.13
      id: go

    - name: Install Protoc
      uses: arduino/setup-protoc@master

    - name: Check out this code
      uses: actions/checkout@v2
      with:
        path: services
    
    - name: Check out micro code
      uses: actions/checkout@v2
      with:
        repository: 'micro/micro'
        path: 'micro'
        ref: '2bc730ad54f2f5afbadab121005b462a8a938667'

    - name: Enable caching
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Get Date
      id: get-date
      run: |
        echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
      shell: bash
    - name: Enable docker caching
      uses: actions/cache@v2
      with:
        path: /tmp/docker-registry
        key: docker-registry-int-${{ steps.get-date.outputs.date }}

    - name: Install micro
      working-directory: micro
      run: |
        go run . init --profile=ci --output=profile.go
        go mod edit -replace github.com/micro/micro/profile/ci/v3=./profile/ci
        go mod edit -replace google.golang.org/grpc=google.golang.org/grpc@v1.26.0
        go install

    - name: Build container
      run: |
        docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-registry:/var/lib/registry registry:2 && npx wait-on tcp:5000
        cp services/tests/image/.dockerignore .
        docker pull ghcr.io/m3o/services-build-cache || true
        cd micro && GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build && cd ..
        docker build -t micro -f services/tests/image/Dockerfile . --cache-from=localhost:5000/services-build-cache
        docker tag micro localhost:5000/services-build-cache && docker push localhost:5000/services-build-cache || true



    - name: Test M3O services
      working-directory: services/tests
      run: |
          # Generate keys for JWT tests
          ssh-keygen -f /tmp/sshkey -m pkcs8 -q -N "" || true
          ssh-keygen -f /tmp/sshkey -e  -m pkcs8 > /tmp/sshkey.pub || true
          go clean -testcache && go test -timeout 15m --tags=m3o -v ./...
      env:
        MICRO_STRIPE_API_KEY: ${{ secrets.MICRO_STRIPE_API_KEY }}
        MICRO_SENDGRID_API_KEY: ${{ secrets.MICRO_SENDGRID_API_KEY }}
        MICRO_SENDGRID_TEMPLATE_ID: ${{ secrets.MICRO_SENDGRID_TEMPLATE_ID }}
        MICRO_STRIPE_PLAN_ID: ${{ secrets.MICRO_STRIPE_PLAN_ID }}
        MICRO_SENDGRID_INVITE_TEMPLATE_ID: ${{ secrets.MICRO_SENDGRID_INVITE_TEMPLATE_ID }}
        MICRO_STRIPE_ADDITIONAL_USERS_PRICE_ID: ${{ secrets.MICRO_STRIPE_ADDITIONAL_USERS_PRICE_ID }}
        MICRO_STRIPE_ADDITIONAL_SERVICES_PRICE_ID: ${{ secrets.MICRO_STRIPE_ADDITIONAL_SERVICES_PRICE_ID }}
        MICRO_EMAIL_FROM: ${{ secrets.MICRO_EMAIL_FROM }}
        MICRO_TEST_ENV: ${{ secrets.MICRO_TEST_ENV }}
        M3O_STRIPE_SVC: ../../../payments/provider/stripe
        M3O_SIGNUP_SVC: ../../../signup
        M3O_INVITE_SVC: ../../../invite
        
